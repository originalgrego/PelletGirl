<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_pelletgirl</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>5</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Slow down the pellet girl animation
image_speed = 0.25;

//Start the map in normal mode
global.superMode = false;

//Store our spawn coordinates for respawns, allows spawn position to be map dependent
spawnX = x;
spawnY = y;

//We are not currently dead
dead = false;

//Initialize the variable to false, no sound should play at spawn
playPelletSoundNextChance = false;

//Start the ear piercing siren
audio_play_sound(snd_siren, 1, true);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//alarm[1] respawns Pellet Girl
x = spawnX;
y = spawnY;
dead = false;
audio_play_sound(snd_siren, 1, true);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//alarm[0] ends superMode
global.superMode = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//When dead or gameOver nothing to do
if (!(dead || global.gameOver)) {

    //Only play sounds when we have eaten a pellet and there is not currently a pellet
    //noise playing, avoids annoying bursts of pellet sounds
    if (playPelletSoundNextChance &amp;&amp; !audio_is_playing(snd_pellet)) {
        audio_play_sound(snd_pellet, 1, false);
        playPelletSoundNextChance = false;
    }

    //Move in the direction the user is pressing if there is not a wall stopping them
    if (keyboard_check(vk_up) &amp;&amp; !place_meeting(x, y - 1, obj_wall_base)) {
        vspeed = -2;
        hspeed = 0;
    } else if (keyboard_check(vk_down) &amp;&amp; !place_meeting(x, y + 1, obj_wall_base)) {
        vspeed = 2;
        hspeed = 0;
    } else if (keyboard_check(vk_left) &amp;&amp; !place_meeting(x - 1, y, obj_wall_base)) {
        vspeed = 0;
        hspeed = -2;
    } else if (keyboard_check(vk_right) &amp;&amp; !place_meeting(x + 1, y, obj_wall_base)) {
        vspeed = 0;
        hspeed = 2;
    }
    
    //If no pellets remain restart the room, gives the illusion of levels
    //TODO: if more levels are implemented this should be a room_goto_next() call
    if (instance_number(obj_pellet) == 0) {
        room_restart();
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_zombie">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!dead) {
    //If superMode is activated kill the zombie and give the user a ton of points
    if (global.superMode) {
        if (destroy_other_if_close()) {
            score += 2000;
        }
    } else if (is_close(other)) { //Otherwise Pellet Girl dies
        playPelletSoundNextChance = false;
        dead = true;
        //Hide Pellet Girl offscreen, i dunno why, lazy i guess
        x = -500;
        y = -500;
        speed = 0;
        image_angle = 0;
        lives --;
        //Stop the siren and play the death song
        audio_stop_sound(snd_siren);
        audio_play_sound(snd_death, 1, false);
        //If the user has no lives set the gameOver flag, otherwise set the respawn alarm 
        if (lives &lt; 0) {
            global.gameOver = true;
        } else {
            alarm[1] = 60;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_zombie_spray">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//If we are close to the spray destroy it and enable super mode, give the user points
if (destroy_other_if_close()) {
    global.superMode = true;
    alarm[0] = 150;
    score += 500;
    play_or_queue_pellet_sound();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_pellet">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//If we are close enough to the pellet, destroy it and give the user points
if (destroy_other_if_close()) {
    score += 100;
    play_or_queue_pellet_sound();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_wall_base">
      <action>
        <libid>1</libid>
        <id>103</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_set_hspeed</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>104</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_set_vspeed</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Don't be annoying
audio_stop_all();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//On a new game set the number of lives
lives = 1;
//Set the gameOver global to fals on game start
global.gameOver = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_xscale = 1;
image_speed = 0.25;

//Set the drawing properties based on the direction the character is heading
if (hspeed &gt; 0) {
    image_angle = 0;
} else if (hspeed &lt; 0) {
    image_angle = 0;
    image_xscale = -1;
} else if (vspeed &gt; 0) {
    image_angle = 270;
} else if (vspeed &lt; 0) {
    image_angle = 90;
} else {
    image_speed = 0;
}

draw_self();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>6,6</point>
    <point>6,6</point>
  </PhysicsShapePoints>
</object>
